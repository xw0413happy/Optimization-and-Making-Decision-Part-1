# Final Project, May 11th 2022
# Wang Xi

# Import libraries
from scipy.integrate import quad
import numpy as np
import os # for setting up working directory
import pandas as pd
from scipy.optimize import minimize # for minimization

# Set working directory
os.chdir("C:\\Users\\xw041\\OneDrive - Texas Tech University\\Desktop\\TTU_8th_2022 Spring\\CE 5331 Optimization and Decision Making 1\\Final project")
os.getcwd()

# Read data and define mu
wells = pd.read_csv("wells.csv")
wells.columns
X = wells["X_Feet"]
Y = wells['Y_Feet']
Dj = wells['Well_Depth']
rj = wells['Well_Radius_in']
S = 0.001 # bounds??? [0.0009, 0.0025]
K = 350 # bounds??? [200, 700]
t = 30 # 30 years???
Qj = 0.1

# Define mu function
mu = ((x-X)**2 + (y-Y)**2)*S/4*K*rj*t # what is x and y???

# Define W(u) Well function
def integrand (x):
    return np.exp(-x)/x

# Define integral function
W = quad(integrand, mu, np.inf)

# Define drawdown function
def drawdown(x):
    dd = (Qj/4*(np.pi)*K*Dj)*W
    return (dd)

# Minimize the objective function
obj = minimize(drawdown,b,args=(X,Y,Dj,rj,),method='Nelder-Mead',tol=1e-6,options={'maxiter':100000})
obj
