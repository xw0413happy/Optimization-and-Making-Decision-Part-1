# Question 3- Interval Linear Programming
# Structure design of linear interval programming
# Create an instant problem of LpProblem for 25th percentile drought
interv = LpProblem(name='MiniProject3-interval-linear-programming', sense=LpMaximize)

# Create decision variables
x1 = LpVariable('corn', lowBound=0, upBound=None, cat='Continuous') # continuous is default
x2 = LpVariable('cotton', lowBound=50, upBound=None, cat='Continuous')
x3 = LpVariable('sorghum', lowBound=0, upBound=None, cat='Continuous')
# alpha = LpVariable("alpha", lowBound=0, upBound=1, cat='Continuous')

# maximize the obj function: [500,750]corn + [400,500]cotton + [375,400]sorghum
interv += 1/2*(500 + 750)*x1 + 1/2*(400 + 500)*x2 + 1/2*(375 + 400)*x3 # Objective function

# Subject to the constraints
# In here, set alpha=0.50
# investment constraint:  [25,40]*x1 + [20,30]*x2 + [12,18]*x3 <= 100000 - 20000 - 15000 - 10000
interv += 25*x1 + 20*x2 + 12*x3 <= 100000 - 20000 - 15000 - 10000 # 55000
interv += (55000) + (55000) - ((25+40)*x1 + (20+30)*x2 + (12+18)*x3) >= 0.5*((40-25)*x1 + (30-20)*x2 + (18-12)*x3)
interv += x1 + x2 + x3 == 640 # land constraint
# water constraint:  [25,30]*x1 + [18,22]*x2 + [16,18]*x3 <= 18*640 + [15,20]*640
interv += 25*x1 + 18*x2 + 16*x3 <= 18*640 + 20*640
interv += (18*640 + 15*640) + (18*640 + 20*640) - ((25+30)*x1 + (18+22)*x2 + (16+18)*x3) >= 0.5*(20-15) + 0.5*((30-25)*x1 + (22-18)*x2 + (18-16)*x3)

# The problem data is written to an .lp file
interv.writeLP("MiniProject3-interval-linear-programming.lp")

# The problem is solved using PuLP's choice of Solver
interv.solve(solver=GLPK(msg=False))

# The status of the solution is printed to the screen
print("Status:", LpStatus[interv.status])

# Each of the variables is printed with its optimum value
for v in interv.variables():
    print(v.name, "=", v.varValue)

revenue = value(interv.objective)
revenue
print("The maximal revenue by using Interval Linear Programming is:${}".format(round(revenue,3))) 
# add 'dollar' sign for test

# Print the obj func optimal value and roots in another way
print("X1 optimal value:", x1.varValue)
print("X2 optimal value:", x2.varValue)
print("X3 optimal value:", x3.varValue)

# Result with 0.5 alpha
The maximal revenue by using Interval Linear Programming is:$391250.0
X1 optimal value: 590.0
X2 optimal value: 50.0
X3 optimal value: 0.0
